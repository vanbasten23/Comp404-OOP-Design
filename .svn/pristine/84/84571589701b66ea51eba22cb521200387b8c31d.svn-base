<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="zh">
<head>
<!-- Generated by javadoc (1.8.0_20) on Fri Nov 21 10:28:10 CST 2014 -->
<title>VDataPacket</title>
<meta name="date" content="2014-11-21">
<link rel="stylesheet" type="text/css" href="../../stylesheet.css" title="Style">
<script type="text/javascript" src="../../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="VDataPacket";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":9};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>您的浏览器已禁用 JavaScript。</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="跳过导航链接">跳过导航链接</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="导航">
<li><a href="../../overview-summary.html">概览</a></li>
<li><a href="package-summary.html">程序包</a></li>
<li class="navBarCell1Rev">类</li>
<li><a href="class-use/VDataPacket.html">使用</a></li>
<li><a href="package-tree.html">树</a></li>
<li><a href="../../deprecated-list.html">已过时</a></li>
<li><a href="../../index-files/index-1.html">索引</a></li>
<li><a href="../../help-doc.html">帮助</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../provided/datapacket/ICmd2ModelAdapter_deprecated.html" title="provided.datapacket中的接口"><span class="typeNameLink">上一个类</span></a></li>
<li>下一个类</li>
</ul>
<ul class="navList">
<li><a href="../../index.html?provided/datapacket/VDataPacket.html" target="_top">框架</a></li>
<li><a href="VDataPacket.html" target="_top">无框架</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../allclasses-noframe.html">所有类</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>概要:&nbsp;</li>
<li>嵌套&nbsp;|&nbsp;</li>
<li>字段&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">构造器</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">方法</a></li>
</ul>
<ul class="subNavList">
<li>详细资料:&nbsp;</li>
<li>字段&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">构造器</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">方法</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">provided.datapacket</div>
<h2 title="类 VDataPacket" class="title">类 VDataPacket</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>java.util.AbstractCollection&lt;E&gt;</li>
<li>
<ul class="inheritance">
<li>java.util.AbstractList&lt;E&gt;</li>
<li>
<ul class="inheritance">
<li>java.util.Vector&lt;<a href="../../provided/datapacket/ADataPacket.html" title="provided.datapacket中的类">ADataPacket</a>&gt;</li>
<li>
<ul class="inheritance">
<li>provided.datapacket.VDataPacket</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>所有已实现的接口:</dt>
<dd>java.io.Serializable, java.lang.Cloneable, java.lang.Iterable&lt;<a href="../../provided/datapacket/ADataPacket.html" title="provided.datapacket中的类">ADataPacket</a>&gt;, java.util.Collection&lt;<a href="../../provided/datapacket/ADataPacket.html" title="provided.datapacket中的类">ADataPacket</a>&gt;, java.util.List&lt;<a href="../../provided/datapacket/ADataPacket.html" title="provided.datapacket中的类">ADataPacket</a>&gt;, java.util.RandomAccess</dd>
</dl>
<hr>
<br>
<pre>public class <span class="typeNameLabel">VDataPacket</span>
extends java.util.Vector&lt;<a href="../../provided/datapacket/ADataPacket.html" title="provided.datapacket中的类">ADataPacket</a>&gt;</pre>
<div class="block">Composite data type for use in data packets: DataPacket&lt;VDataPacket&gt; <br/>
 Note that Vector&lt;ADataPacket&gt; cannot be used as a data packet data type 
 directly because type erasure prevents the distinction between 
 Vector&lt;A&gt; and Vector&lt;B&gt; -- that is, they produce the same Class object.
 <br/>
 Usage:<br/>
 <pre>
      // make the vector of data packets
      VDataPacket vdp = new VDataPacket();
      vdp.add(datapacket1);
      vdp.add(datapacket2);
      vdp.add(datapacket3);
      // etc
      // make the composite data packet
      ADataPacket vd = new DataPacket&lt;VDataPacket&gt;(VDataPacket.class, vdp);
 </pre>
 This class is a vector of the abstract data packets, ADataPacket.  If a vector of more specific 
 types of data packets is desired, a custom class that is a sub-class of the desired
 Vector type should be used instead of this class.   Composites made as such would be 
 distinguishable as per their held types.</div>
<dl>
<dt><span class="simpleTagLabel">作者:</span></dt>
<dd>Stephen Wong (c) 2010</dd>
<dt><span class="seeLabel">另请参阅:</span></dt>
<dd><a href="../../serialized-form.html#provided.datapacket.VDataPacket">序列化表格</a></dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>构造器概要</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="构造器概要表, 列表构造器和解释">
<caption><span>构造器</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">构造器和说明</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../../provided/datapacket/VDataPacket.html#VDataPacket--">VDataPacket</a></span>()</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>方法概要</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="方法概要表, 列表方法和解释">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">限定符和类型</th>
<th class="colLast" scope="col">方法和说明</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>static &lt;R,P&gt;&nbsp;<a href="../../provided/datapacket/ADataPacketAlgoCmd.html" title="provided.datapacket中的类">ADataPacketAlgoCmd</a>&lt;java.util.Vector&lt;R&gt;,<a href="../../provided/datapacket/VDataPacket.html" title="provided.datapacket中的类">VDataPacket</a>,P&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../provided/datapacket/VDataPacket.html#makeMapCmd-provided.datapacket.DataPacketAlgo-">makeMapCmd</a></span>(<a href="../../provided/datapacket/DataPacketAlgo.html" title="provided.datapacket中的类">DataPacketAlgo</a>&lt;R,P&gt;&nbsp;algo)</code>
<div class="block">Convenience method that creates a command that maps a visitor over the vector of data packets.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.util.Vector">
<!--   -->
</a>
<h3>从类继承的方法&nbsp;java.util.Vector</h3>
<code>add, add, addAll, addAll, addElement, capacity, clear, clone, contains, containsAll, copyInto, elementAt, elements, ensureCapacity, equals, firstElement, forEach, get, hashCode, indexOf, indexOf, insertElementAt, isEmpty, iterator, lastElement, lastIndexOf, lastIndexOf, listIterator, listIterator, remove, remove, removeAll, removeAllElements, removeElement, removeElementAt, removeIf, replaceAll, retainAll, set, setElementAt, setSize, size, sort, spliterator, subList, toArray, toArray, toString, trimToSize</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>从类继承的方法&nbsp;java.lang.Object</h3>
<code>getClass, notify, notifyAll, wait, wait, wait</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.util.Collection">
<!--   -->
</a>
<h3>从接口继承的方法&nbsp;java.util.Collection</h3>
<code>parallelStream, stream</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>构造器详细资料</h3>
<a name="VDataPacket--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>VDataPacket</h4>
<pre>public&nbsp;VDataPacket()</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>方法详细资料</h3>
<a name="makeMapCmd-provided.datapacket.DataPacketAlgo-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>makeMapCmd</h4>
<pre>public static&nbsp;&lt;R,P&gt;&nbsp;<a href="../../provided/datapacket/ADataPacketAlgoCmd.html" title="provided.datapacket中的类">ADataPacketAlgoCmd</a>&lt;java.util.Vector&lt;R&gt;,<a href="../../provided/datapacket/VDataPacket.html" title="provided.datapacket中的类">VDataPacket</a>,P&gt;&nbsp;makeMapCmd(<a href="../../provided/datapacket/DataPacketAlgo.html" title="provided.datapacket中的类">DataPacketAlgo</a>&lt;R,P&gt;&nbsp;algo)</pre>
<div class="block">Convenience method that creates a command that maps a visitor over the vector of data packets.
 <br/>
 Since the result returned by the returned command is a vector of R, 
 the returned command must be wrapped in another command
 before it can be used in a recursive algorithm, which would require a return of type R.</div>
<dl>
<dt><span class="paramLabel">类型参数:</span></dt>
<dd><code>R</code> - The return type of the given visitor.</dd>
<dd><code>P</code> - The vararg input parameter type of the original visitor.</dd>
<dt><span class="paramLabel">参数:</span></dt>
<dd><code>algo</code> - The visitor to be mapped over all the stored data packets.</dd>
<dt><span class="returnLabel">返回:</span></dt>
<dd>An ADataPacketAlgoCmd whose results are a vector of results from applying the given visitor to each data packet element.</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="跳过导航链接">跳过导航链接</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="导航">
<li><a href="../../overview-summary.html">概览</a></li>
<li><a href="package-summary.html">程序包</a></li>
<li class="navBarCell1Rev">类</li>
<li><a href="class-use/VDataPacket.html">使用</a></li>
<li><a href="package-tree.html">树</a></li>
<li><a href="../../deprecated-list.html">已过时</a></li>
<li><a href="../../index-files/index-1.html">索引</a></li>
<li><a href="../../help-doc.html">帮助</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../provided/datapacket/ICmd2ModelAdapter_deprecated.html" title="provided.datapacket中的接口"><span class="typeNameLink">上一个类</span></a></li>
<li>下一个类</li>
</ul>
<ul class="navList">
<li><a href="../../index.html?provided/datapacket/VDataPacket.html" target="_top">框架</a></li>
<li><a href="VDataPacket.html" target="_top">无框架</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../allclasses-noframe.html">所有类</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>概要:&nbsp;</li>
<li>嵌套&nbsp;|&nbsp;</li>
<li>字段&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">构造器</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">方法</a></li>
</ul>
<ul class="subNavList">
<li>详细资料:&nbsp;</li>
<li>字段&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">构造器</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">方法</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
